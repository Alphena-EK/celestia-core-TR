// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/proto3/block.proto

package proto3

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type PartSetHeader struct {
	Total                int32    `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartSetHeader) Reset()         { *m = PartSetHeader{} }
func (m *PartSetHeader) String() string { return proto.CompactTextString(m) }
func (*PartSetHeader) ProtoMessage()    {}
func (*PartSetHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_481ba35c580cc99a, []int{0}
}
func (m *PartSetHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartSetHeader.Unmarshal(m, b)
}
func (m *PartSetHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartSetHeader.Marshal(b, m, deterministic)
}
func (dst *PartSetHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartSetHeader.Merge(dst, src)
}
func (m *PartSetHeader) XXX_Size() int {
	return xxx_messageInfo_PartSetHeader.Size(m)
}
func (m *PartSetHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PartSetHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PartSetHeader proto.InternalMessageInfo

func (m *PartSetHeader) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PartSetHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BlockID struct {
	Hash                 []byte         `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	PartsHeader          *PartSetHeader `protobuf:"bytes,2,opt,name=PartsHeader" json:"PartsHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BlockID) Reset()         { *m = BlockID{} }
func (m *BlockID) String() string { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()    {}
func (*BlockID) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_481ba35c580cc99a, []int{1}
}
func (m *BlockID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockID.Unmarshal(m, b)
}
func (m *BlockID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockID.Marshal(b, m, deterministic)
}
func (dst *BlockID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockID.Merge(dst, src)
}
func (m *BlockID) XXX_Size() int {
	return xxx_messageInfo_BlockID.Size(m)
}
func (m *BlockID) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockID.DiscardUnknown(m)
}

var xxx_messageInfo_BlockID proto.InternalMessageInfo

func (m *BlockID) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockID) GetPartsHeader() *PartSetHeader {
	if m != nil {
		return m.PartsHeader
	}
	return nil
}

type Header struct {
	// basic block info
	Version  *Version   `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	ChainID  string     `protobuf:"bytes,2,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Height   int64      `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
	Time     *Timestamp `protobuf:"bytes,4,opt,name=Time" json:"Time,omitempty"`
	NumTxs   int64      `protobuf:"varint,5,opt,name=NumTxs,proto3" json:"NumTxs,omitempty"`
	TotalTxs int64      `protobuf:"varint,6,opt,name=TotalTxs,proto3" json:"TotalTxs,omitempty"`
	// prev block info
	LastBlockID *BlockID `protobuf:"bytes,7,opt,name=LastBlockID" json:"LastBlockID,omitempty"`
	// hashes of block data
	LastCommitHash []byte   `protobuf:"bytes,8,opt,name=LastCommitHash,proto3" json:"LastCommitHash,omitempty"`
	DataHash       []byte   `protobuf:"bytes,9,opt,name=DataHash,proto3" json:"DataHash,omitempty"`
	RowRoots       [][]byte `protobuf:"bytes,10,rep,name=RowRoots" json:"RowRoots,omitempty"`
	ColumnRoots    [][]byte `protobuf:"bytes,11,rep,name=ColumnRoots" json:"ColumnRoots,omitempty"`
	// hashes from the app output from the prev block
	ValidatorsHash     []byte `protobuf:"bytes,12,opt,name=ValidatorsHash,proto3" json:"ValidatorsHash,omitempty"`
	NextValidatorsHash []byte `protobuf:"bytes,13,opt,name=NextValidatorsHash,proto3" json:"NextValidatorsHash,omitempty"`
	ConsensusHash      []byte `protobuf:"bytes,14,opt,name=ConsensusHash,proto3" json:"ConsensusHash,omitempty"`
	AppHash            []byte `protobuf:"bytes,15,opt,name=AppHash,proto3" json:"AppHash,omitempty"`
	LastResultsHash    []byte `protobuf:"bytes,16,opt,name=LastResultsHash,proto3" json:"LastResultsHash,omitempty"`
	// consensus info
	EvidenceHash         []byte   `protobuf:"bytes,17,opt,name=EvidenceHash,proto3" json:"EvidenceHash,omitempty"`
	ProposerAddress      []byte   `protobuf:"bytes,18,opt,name=ProposerAddress,proto3" json:"ProposerAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_481ba35c580cc99a, []int{2}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Header) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *Header) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Header) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Header) GetNumTxs() int64 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *Header) GetTotalTxs() int64 {
	if m != nil {
		return m.TotalTxs
	}
	return 0
}

func (m *Header) GetLastBlockID() *BlockID {
	if m != nil {
		return m.LastBlockID
	}
	return nil
}

func (m *Header) GetLastCommitHash() []byte {
	if m != nil {
		return m.LastCommitHash
	}
	return nil
}

func (m *Header) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

func (m *Header) GetRowRoots() [][]byte {
	if m != nil {
		return m.RowRoots
	}
	return nil
}

func (m *Header) GetColumnRoots() [][]byte {
	if m != nil {
		return m.ColumnRoots
	}
	return nil
}

func (m *Header) GetValidatorsHash() []byte {
	if m != nil {
		return m.ValidatorsHash
	}
	return nil
}

func (m *Header) GetNextValidatorsHash() []byte {
	if m != nil {
		return m.NextValidatorsHash
	}
	return nil
}

func (m *Header) GetConsensusHash() []byte {
	if m != nil {
		return m.ConsensusHash
	}
	return nil
}

func (m *Header) GetAppHash() []byte {
	if m != nil {
		return m.AppHash
	}
	return nil
}

func (m *Header) GetLastResultsHash() []byte {
	if m != nil {
		return m.LastResultsHash
	}
	return nil
}

func (m *Header) GetEvidenceHash() []byte {
	if m != nil {
		return m.EvidenceHash
	}
	return nil
}

func (m *Header) GetProposerAddress() []byte {
	if m != nil {
		return m.ProposerAddress
	}
	return nil
}

type Version struct {
	Block                uint64   `protobuf:"varint,1,opt,name=Block,proto3" json:"Block,omitempty"`
	App                  uint64   `protobuf:"varint,2,opt,name=App,proto3" json:"App,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_481ba35c580cc99a, []int{3}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetBlock() uint64 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *Version) GetApp() uint64 {
	if m != nil {
		return m.App
	}
	return 0
}

// Timestamp wraps how amino encodes time.
// This is the protobuf well-known type protobuf/timestamp.proto
// See:
// https://github.com/google/protobuf/blob/d2980062c859649523d5fd51d6b55ab310e47482/src/google/protobuf/timestamp.proto#L123-L135
// NOTE/XXX: nanos do not get skipped if they are zero in amino.
type Timestamp struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_481ba35c580cc99a, []int{4}
}
func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (dst *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(dst, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

func init() {
	proto.RegisterType((*PartSetHeader)(nil), "proto3.PartSetHeader")
	proto.RegisterType((*BlockID)(nil), "proto3.BlockID")
	proto.RegisterType((*Header)(nil), "proto3.Header")
	proto.RegisterType((*Version)(nil), "proto3.Version")
	proto.RegisterType((*Timestamp)(nil), "proto3.Timestamp")
}

func init() { proto.RegisterFile("types/proto3/block.proto", fileDescriptor_block_481ba35c580cc99a) }

var fileDescriptor_block_481ba35c580cc99a = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0xb1, 0x9d, 0x34, 0xe3, 0xa4, 0x69, 0x47, 0x80, 0x56, 0x9c, 0x2c, 0x0b, 0x50, 0xb8,
	0xa4, 0x6a, 0x7b, 0x40, 0x88, 0x53, 0x48, 0x90, 0x5a, 0x09, 0x55, 0xd5, 0x12, 0xe5, 0xbe, 0x8d,
	0x57, 0xc4, 0xc2, 0xf6, 0x5a, 0xde, 0x0d, 0x84, 0x07, 0xe0, 0xbd, 0xd1, 0xce, 0xda, 0x26, 0x8e,
	0x7a, 0xf3, 0xf7, 0x33, 0xdf, 0x8c, 0xc7, 0x63, 0x60, 0xe6, 0x4f, 0x25, 0xf5, 0x55, 0x55, 0x2b,
	0xa3, 0x6e, 0xaf, 0x9e, 0x72, 0xb5, 0xfd, 0x39, 0x27, 0x80, 0x03, 0xc7, 0x25, 0x9f, 0x60, 0xf2,
	0x28, 0x6a, 0xf3, 0x5d, 0x9a, 0x3b, 0x29, 0x52, 0x59, 0xe3, 0x4b, 0x08, 0xd7, 0xca, 0x88, 0x9c,
	0x79, 0xb1, 0x37, 0x0b, 0xb9, 0x03, 0x88, 0x10, 0xdc, 0x09, 0xbd, 0x63, 0x2f, 0x62, 0x6f, 0x36,
	0xe6, 0xf4, 0x9c, 0x6c, 0x60, 0xf8, 0xc5, 0x26, 0xde, 0xaf, 0x3a, 0xd9, 0xfb, 0x2f, 0xe3, 0x47,
	0x88, 0x6c, 0xb2, 0x76, 0xb9, 0x54, 0x19, 0xdd, 0xbc, 0x72, 0xed, 0x6f, 0xe7, 0xbd, 0xa6, 0xfc,
	0xd8, 0x99, 0xfc, 0x0d, 0x61, 0xd0, 0x0c, 0xf3, 0x01, 0x86, 0x1b, 0x59, 0xeb, 0x4c, 0x95, 0x14,
	0x1d, 0xdd, 0x4c, 0xdb, 0xfa, 0x86, 0xe6, 0xad, 0x8e, 0x0c, 0x86, 0xcb, 0x9d, 0xc8, 0xca, 0xfb,
	0x15, 0xb5, 0x1a, 0xf1, 0x16, 0xe2, 0x6b, 0x1b, 0x97, 0xfd, 0xd8, 0x19, 0xe6, 0xc7, 0xde, 0xcc,
	0xe7, 0x0d, 0xc2, 0x77, 0x10, 0xac, 0xb3, 0x42, 0xb2, 0x80, 0x92, 0x2f, 0xdb, 0x64, 0xcb, 0x69,
	0x23, 0x8a, 0x8a, 0x93, 0x6c, 0xcb, 0x1f, 0xf6, 0xc5, 0xfa, 0xa0, 0x59, 0xe8, 0xca, 0x1d, 0xc2,
	0x37, 0x70, 0x46, 0xbb, 0xb1, 0xca, 0x80, 0x94, 0x0e, 0xe3, 0x35, 0x44, 0xdf, 0x84, 0x36, 0xcd,
	0x7a, 0xd8, 0xb0, 0x3f, 0x7b, 0x43, 0xf3, 0x63, 0x0f, 0xbe, 0x87, 0x73, 0x0b, 0x97, 0xaa, 0x28,
	0x32, 0x43, 0xcb, 0x3c, 0xa3, 0x65, 0x9e, 0xb0, 0xb6, 0xed, 0x4a, 0x18, 0x41, 0x8e, 0x11, 0x39,
	0x3a, 0x6c, 0x35, 0xae, 0x7e, 0x73, 0xa5, 0x8c, 0x66, 0x10, 0xfb, 0x56, 0x6b, 0x31, 0xc6, 0x10,
	0x2d, 0x55, 0xbe, 0x2f, 0x4a, 0x27, 0x47, 0x24, 0x1f, 0x53, 0x76, 0x82, 0x8d, 0xc8, 0xb3, 0x54,
	0x18, 0x55, 0x6b, 0xca, 0x1f, 0xbb, 0x09, 0xfa, 0x2c, 0xce, 0x01, 0x1f, 0xe4, 0xc1, 0x9c, 0x78,
	0x27, 0xe4, 0x7d, 0x46, 0xc1, 0xb7, 0x30, 0x59, 0xaa, 0x52, 0xcb, 0x52, 0xef, 0x9d, 0xf5, 0x9c,
	0xac, 0x7d, 0xd2, 0x7e, 0xbf, 0x45, 0x55, 0x91, 0x3e, 0x25, 0xbd, 0x85, 0x38, 0x83, 0xa9, 0xdd,
	0x01, 0x97, 0x7a, 0x9f, 0x1b, 0x97, 0x70, 0x41, 0x8e, 0x53, 0x1a, 0x13, 0x18, 0x7f, 0xfd, 0x95,
	0xa5, 0xb2, 0xdc, 0x4a, 0xb2, 0x5d, 0x92, 0xad, 0xc7, 0xd9, 0xb4, 0xc7, 0x5a, 0x55, 0x4a, 0xcb,
	0x7a, 0x91, 0xa6, 0xb5, 0xd4, 0x9a, 0xa1, 0x4b, 0x3b, 0xa1, 0x93, 0xeb, 0xee, 0xf8, 0xec, 0x4f,
	0x41, 0xdf, 0x89, 0xae, 0x30, 0xe0, 0x0e, 0xe0, 0x05, 0xf8, 0x8b, 0xaa, 0xa2, 0x73, 0x0b, 0xb8,
	0x7d, 0x4c, 0x3e, 0xc3, 0xa8, 0x3b, 0x1f, 0xfb, 0x46, 0x5a, 0x6e, 0x55, 0x99, 0x6a, 0x2a, 0xf3,
	0x79, 0x0b, 0x6d, 0x5c, 0x29, 0x4a, 0xa5, 0xa9, 0x34, 0xe4, 0x0e, 0x3c, 0x35, 0xbf, 0xe4, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xd8, 0x12, 0xd7, 0xb5, 0x03, 0x00, 0x00,
}
